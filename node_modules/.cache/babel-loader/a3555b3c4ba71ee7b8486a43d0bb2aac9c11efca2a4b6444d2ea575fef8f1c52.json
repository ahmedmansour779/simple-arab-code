{"ast":null,"code":"var _jsxFileName = \"G:\\\\simpel arab code - react\\\\my-app\\\\src\\\\hooks\\\\Reducer\\\\useReducerComplex.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstCount: 0,\n  secondCount: 2\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    // first count\n    case \"increment\":\n      return {\n        ...state,\n        firstCount: state.firstCount + action.value\n      };\n    case \"decrement\":\n      return {\n        ...state,\n        firstCount: state.firstCount - action.value\n      };\n    // second count\n    case \"incrementSecondCount\":\n      return {\n        ...state,\n        secondCount: state.secondCount + action.value\n      };\n    case \"decrementSecondCount\":\n      return {\n        ...state,\n        secondCount: state.secondCount - action.value\n      };\n    // 5\n    case \"increment5\":\n      return {\n        ...state,\n        firstCount: state.firstCount + action.value\n      };\n    case \"decrement5\":\n      return {\n        ...state,\n        firstCount: state.firstCount - action.value\n      };\n    // reset\n    case \"reset\":\n      return initialState;\n    default:\n      return state;\n  }\n};\nconst UseReducerComplex = () => {\n  _s();\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"count - \", count.firstCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment\",\n        value: 1\n      }),\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement\",\n        value: 1\n      }),\n      children: \"decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"reset\"\n      }),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment5\",\n        value: 5\n      }),\n      children: \"increment 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement5\",\n        value: 5\n      }),\n      children: \"decrement 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 100\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"count - \", count.secondCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"incrementSecondCount\",\n        value: 1\n      }),\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrementSecondCount\",\n        value: 1\n      }),\n      children: \"decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UseReducerComplex, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n_c = UseReducerComplex;\nexport default UseReducerComplex;\n\n// nots\n\n// ...state to save second value if you input more value\nvar _c;\n$RefreshReg$(_c, \"UseReducerComplex\");","map":{"version":3,"names":["React","useReducer","initialState","firstCount","secondCount","reducer","state","action","type","value","UseReducerComplex","count","dispatch"],"sources":["G:/simpel arab code - react/my-app/src/hooks/Reducer/useReducerComplex.jsx"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n    firstCount: 0,\r\n    secondCount: 2,\r\n}\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        // first count\r\n        case \"increment\":\r\n            return { ...state, firstCount: state.firstCount + action.value }\r\n        case \"decrement\":\r\n            return { ...state, firstCount: state.firstCount - action.value }\r\n        // second count\r\n        case \"incrementSecondCount\":\r\n            return { ...state, secondCount: state.secondCount + action.value }\r\n        case \"decrementSecondCount\":\r\n            return { ...state, secondCount: state.secondCount - action.value }\r\n        // 5\r\n        case \"increment5\":\r\n            return { ...state, firstCount: state.firstCount + action.value }\r\n        case \"decrement5\":\r\n            return { ...state, firstCount: state.firstCount - action.value }\r\n        // reset\r\n        case \"reset\":\r\n            return initialState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst UseReducerComplex = () => {\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n    return (\r\n        <div>\r\n            <h1>count - {count.firstCount}</h1>\r\n            <button onClick={() => dispatch({ type: \"increment\", value: 1 })}>increment</button>\r\n            <button onClick={() => dispatch({ type: \"decrement\", value: 1 })}>decrement</button>\r\n            <button onClick={() => dispatch({ type: \"reset\" })}>reset</button>\r\n            <button onClick={() => dispatch({ type: \"increment5\", value: 5 })}>increment 5</button>\r\n            <button onClick={() => dispatch({ type: \"decrement5\", value: 5 })}>decrement 5</button><br />\r\n            <h1>count - {count.secondCount}</h1>\r\n            <button onClick={() => dispatch({ type: \"incrementSecondCount\", value: 1 })}>increment</button>\r\n            <button onClick={() => dispatch({ type: \"decrementSecondCount\", value: 1 })}>decrement</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducerComplex\r\n\r\n// nots\r\n\r\n// ...state to save second value if you input more value\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC;AAE1C,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE;AACjB,CAAC;AACD,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM,CAACC,IAAI;IACf;IACA,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGF,KAAK;QAAEH,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACE;MAAM,CAAC;IACpE,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGH,KAAK;QAAEH,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACE;MAAM,CAAC;IACpE;IACA,KAAK,sBAAsB;MACvB,OAAO;QAAE,GAAGH,KAAK;QAAEF,WAAW,EAAEE,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACE;MAAM,CAAC;IACtE,KAAK,sBAAsB;MACvB,OAAO;QAAE,GAAGH,KAAK;QAAEF,WAAW,EAAEE,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACE;MAAM,CAAC;IACtE;IACA,KAAK,YAAY;MACb,OAAO;QAAE,GAAGH,KAAK;QAAEH,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACE;MAAM,CAAC;IACpE,KAAK,YAAY;MACb,OAAO;QAAE,GAAGH,KAAK;QAAEH,UAAU,EAAEG,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACE;MAAM,CAAC;IACpE;IACA,KAAK,OAAO;MACR,OAAOP,YAAY;IACvB;MACI,OAAOI,KAAK;EAAC;AAEzB,CAAC;AAED,MAAMI,iBAAiB,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,OAAO,EAAEH,YAAY,CAAC;EAC3D,oBACI;IAAA,wBACI;MAAA,WAAI,UAAQ,EAACS,KAAK,CAACR,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACnC;MAAQ,OAAO,EAAE,MAAMS,QAAQ,CAAC;QAAEJ,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACpF;MAAQ,OAAO,EAAE,MAAMG,QAAQ,CAAC;QAAEJ,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACpF;MAAQ,OAAO,EAAE,MAAMG,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAQ,CAAC,CAAE;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eAClE;MAAQ,OAAO,EAAE,MAAMI,QAAQ,CAAC;QAAEJ,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eACvF;MAAQ,OAAO,EAAE,MAAMG,QAAQ,CAAC;QAAEJ,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;MAAA;MAAA;MAAA;IAAA,QAAM,eAC7F;MAAA,WAAI,UAAQ,EAACE,KAAK,CAACP,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACpC;MAAQ,OAAO,EAAE,MAAMQ,QAAQ,CAAC;QAAEJ,IAAI,EAAE,sBAAsB;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/F;MAAQ,OAAO,EAAE,MAAMG,QAAQ,CAAC;QAAEJ,IAAI,EAAE,sBAAsB;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAE7F;AAEd,CAAC;AAAA,GAhBKC,iBAAiB;AAAA,KAAjBA,iBAAiB;AAkBvB,eAAeA,iBAAiB;;AAEhC;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}