{"ast":null,"code":"var _jsxFileName = \"G:\\\\simpel arab code - react\\\\my-app\\\\src\\\\hooks\\\\UseRef.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseRef = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [timer, setTimer] = useState(0);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    intervalRef.current = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  const inputRef = useRef(null);\n  _s(setTimer(_s(() => {\n    _s();\n    useEffect(() => {\n      inputRef.current.focus();\n    }, []), 10000;\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Timer - \", timer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        clearInterval(intervalRef.current);\n      },\n      children: \"clear timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s2(UseRef, \"fdKgAindfNz2cymL+T/DJ0nCe8o=\");\n_c = UseRef;\nexport default UseRef;\nvar _c;\n$RefreshReg$(_c, \"UseRef\");","map":{"version":3,"names":["React","useEffect","useRef","useState","UseRef","timer","setTimer","intervalRef","current","setInterval","prevTimer","clearInterval","inputRef","focus"],"sources":["G:/simpel arab code - react/my-app/src/hooks/UseRef.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst UseRef = () => {\r\n    const [timer, setTimer] = useState(0)\r\n    const intervalRef = useRef(null)\r\n    useEffect(() => {\r\n        intervalRef.current = setInterval(() => {\r\n            setTimer((prevTimer) => prevTimer + 1)\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(intervalRef.current)\r\n        }\r\n    }, []);\r\n\r\n    const inputRef = useRef(null)\r\n    setTimer(() => {\r\n        useEffect(() => {\r\n            inputRef.current.focus()\r\n        }, []), 10000\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <input ref={inputRef} type=\"text\" />\r\n            <hr />\r\n            <h1>Timer - {timer}</h1>\r\n            <button onClick={() => { clearInterval(intervalRef.current) }}>\r\n                clear timer\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRef;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE3D,MAAMC,MAAM,GAAG,MAAM;EAAA;EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMI,WAAW,GAAGL,MAAM,CAAC,IAAI,CAAC;EAChCD,SAAS,CAAC,MAAM;IACZM,WAAW,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;MACpCH,QAAQ,CAAEI,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC1C,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM;MACTC,aAAa,CAACJ,WAAW,CAACC,OAAO,CAAC;IACtC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,GAAAI,QAAQ,IAAC,MAAM;IAAA;IACXL,SAAS,CAAC,MAAM;MACZW,QAAQ,CAACJ,OAAO,CAACK,KAAK,EAAE;IAC5B,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK;EACjB,CAAC,kCAAC;EAEF,oBACI;IAAA,wBACI;MAAO,GAAG,EAAED,QAAS;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAI,UAAQ,EAACP,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACxB;MAAQ,OAAO,EAAE,MAAM;QAAEM,aAAa,CAACJ,WAAW,CAACC,OAAO,CAAC;MAAC,CAAE;MAAA,UAAC;IAE/D;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,IA7BKJ,MAAM;AAAA,KAANA,MAAM;AA+BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}