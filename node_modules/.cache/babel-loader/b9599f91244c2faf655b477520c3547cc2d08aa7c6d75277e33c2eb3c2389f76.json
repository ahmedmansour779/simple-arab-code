{"ast":null,"code":"var _jsxFileName = \"G:\\\\simpel arab code - react\\\\my-app\\\\src\\\\hooks\\\\DataFetchingFromApi.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport \"./app.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataFetchingFromApi() {\n  _s();\n  const [posts, setPosts] = useState([0]);\n  const [post, setpost] = useState({});\n  const [id, setId] = useState('');\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      setPosts(response.data);\n    }).catch(error => console.log('error 404'));\n  });\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`).then(response => {\n      setpost(response.data);\n    }).catch(error => console.log('error 404'));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id,\n        onChange: e => {\n          e = 0 ? \"not found\" : setId(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [`${id}`, \" : \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"ulItems\",\n        children: posts.map(posts => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: posts.title\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(DataFetchingFromApi, \"PRLv6Wz/Zm9rBonPdT6gOcQhgcg=\");\n_c = DataFetchingFromApi;\nvar _c;\n$RefreshReg$(_c, \"DataFetchingFromApi\");","map":{"version":3,"names":["axios","useEffect","useState","DataFetchingFromApi","posts","setPosts","post","setpost","id","setId","get","then","response","data","catch","error","console","log","e","target","value","title","map","Math","random"],"sources":["G:/simpel arab code - react/my-app/src/hooks/DataFetchingFromApi.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport \"./app.css\";\r\n\r\nexport default function DataFetchingFromApi() {\r\n    const [posts, setPosts] = useState([0]);\r\n    const [post, setpost] = useState({});\r\n    const [id, setId] = useState('')\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/posts')\r\n            .then((response) => {\r\n                setPosts(response.data)\r\n            })\r\n            .catch((error) => console.log('error 404'))\r\n    });\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n            .then((response) => {\r\n                setpost(response.data)\r\n            })\r\n            .catch((error) => console.log('error 404'))\r\n    }, [id]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <input type=\"text\" value={id} onChange={(e) => { e = 0 ? \"not found\" : setId(e.target.value) }} />\r\n                <p>{`${id}`} : {post.title}</p><hr />\r\n                <ul id='ulItems'>\r\n                    {posts.map((posts) => (\r\n                        <li key={Math.random()}>{posts.title}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC;AAAA;AAEnB,eAAe,SAASC,mBAAmB,GAAG;EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACM,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZD,KAAK,CACAU,GAAG,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAK;MAChBP,QAAQ,CAACO,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC;EACnD,CAAC,CAAC;EACFhB,SAAS,CAAC,MAAM;IACZD,KAAK,CACAU,GAAG,CAAE,8CAA6CF,EAAG,EAAC,CAAC,CACvDG,IAAI,CAAEC,QAAQ,IAAK;MAChBL,OAAO,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC;EACnD,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,oBACI;IAAA,uBACI;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEA,EAAG;QAAC,QAAQ,EAAGU,CAAC,IAAK;UAAEA,CAAC,GAAG,CAAC,GAAG,WAAW,GAAGT,KAAK,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAClG;QAAA,WAAK,GAAEZ,EAAG,EAAC,EAAC,KAAG,EAACF,IAAI,CAACe,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACrC;QAAI,EAAE,EAAC,SAAS;QAAA,UACXjB,KAAK,CAACkB,GAAG,CAAElB,KAAK,iBACb;UAAA,UAAyBA,KAAK,CAACiB;QAAK,GAA3BE,IAAI,CAACC,MAAM,EAAE;UAAA;UAAA;UAAA;QAAA,QACzB;MAAC;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACH,iBACP;AAEX;AAAC,GAnCuBrB,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}