{"ast":null,"code":"var _jsxFileName = \"G:\\\\simpel arab code - react\\\\my-app\\\\src\\\\hooks\\\\UseMemo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseMemo() {\n  _s();\n  const [countOne, setCountOne] = useState(0);\n  const [countTwo, setCountTwo] = useState(0);\n  const [isEvenCountTwoTwo, setIsEvenCountTwoTwo] = useState(\"even\");\n  const incrementCountOne = () => {\n    setCountOne(1);\n    console.log(\"karem\");\n  };\n  const incrementCountTwo = () => {\n    setCountTwo(countTwo + 1);\n  };\n  const reset = useMemo(() => {\n    console.log(\"reset\");\n    setCountOne(0);\n    setCountTwo(0);\n  }, []);\n  const isEvenCountOne = useMemo(() => {\n    let i = 0;\n    while (i < 200000000) i++;\n    console.log(\"isEvenCountOne\");\n    return countOne % 2 === 0;\n  }, [countOne]);\n  const isEven = () => {\n    countTwo % 2 === 0 ? setIsEvenCountTwoTwo(\"even\") : setIsEvenCountTwoTwo(\"odd\");\n  };\n  useEffect(() => {\n    let i = 0;\n    while (i < 200000000) i++;\n    isEven();\n    console.log(\"isEvenCountTwo\");\n  }, [countTwo]);\n\n  // console.log(\"render\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"use Memo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementCountOne,\n      children: [\"count One - \", countOne]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEvenCountOne ? \"even\" : \"odd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementCountTwo,\n      children: [\"count Two - \", countTwo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEvenCountTwoTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n// nots\n\n// useMemo like useCallback but this use in function and useCallback use in export function\n// useMemo retern result value true or false but useCallback retern only function\n// useMemo and useCallback use to optimize for performance\n_s(UseMemo, \"Yz5YjdxyOUL3wvCbuloO+jXnWbg=\");\n_c = UseMemo;\nvar _c;\n$RefreshReg$(_c, \"UseMemo\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","UseMemo","countOne","setCountOne","countTwo","setCountTwo","isEvenCountTwoTwo","setIsEvenCountTwoTwo","incrementCountOne","console","log","incrementCountTwo","reset","isEvenCountOne","i","isEven"],"sources":["G:/simpel arab code - react/my-app/src/hooks/UseMemo.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\n\r\nexport default function UseMemo() {\r\n    const [countOne, setCountOne] = useState(0)\r\n    const [countTwo, setCountTwo] = useState(0)\r\n    const [isEvenCountTwoTwo, setIsEvenCountTwoTwo] = useState(\"even\")\r\n\r\n    const incrementCountOne = () => {\r\n        setCountOne(1)\r\n        console.log(\"karem\")\r\n    }\r\n    const incrementCountTwo = () => {\r\n        setCountTwo(countTwo + 1)\r\n    }\r\n\r\n    const reset = useMemo(() => {\r\n        console.log(\"reset\")\r\n        setCountOne(0);\r\n        setCountTwo(0);\r\n    }, [])\r\n\r\n    const isEvenCountOne = useMemo(() => {\r\n        let i = 0;\r\n        while (i < 200_000_000) i++;\r\n        console.log(\"isEvenCountOne\");\r\n        return (countOne % 2 === 0);\r\n    }, [countOne]);\r\n\r\n    const isEven = () => {\r\n        countTwo % 2 === 0 ?\r\n            setIsEvenCountTwoTwo(\"even\") :\r\n            setIsEvenCountTwoTwo(\"odd\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        let i = 0;\r\n        while (i < 200_000_000) i++;\r\n        isEven()\r\n        console.log(\"isEvenCountTwo\")\r\n    }, [countTwo])\r\n\r\n\r\n    // console.log(\"render\")\r\n\r\n    return (\r\n        <div>\r\n            <h1>use Memo</h1>\r\n\r\n            <button onClick={incrementCountOne}>count One - {countOne}</button>\r\n            <div>{isEvenCountOne ? \"even\" : \"odd\"}</div>\r\n\r\n            <button onClick={incrementCountTwo}>count Two - {countTwo}</button>\r\n            <div>{isEvenCountTwoTwo}</div>\r\n\r\n            <button onClick={reset}>reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// nots\r\n\r\n// useMemo like useCallback but this use in function and useCallback use in export function\r\n// useMemo retern result value true or false but useCallback retern only function\r\n// useMemo and useCallback use to optimize for performance"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAE3D,eAAe,SAASC,OAAO,GAAG;EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAElE,MAAMQ,iBAAiB,GAAG,MAAM;IAC5BL,WAAW,CAAC,CAAC,CAAC;IACdM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACxB,CAAC;EACD,MAAMC,iBAAiB,GAAG,MAAM;IAC5BN,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMQ,KAAK,GAAGb,OAAO,CAAC,MAAM;IACxBU,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBP,WAAW,CAAC,CAAC,CAAC;IACdE,WAAW,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,cAAc,GAAGd,OAAO,CAAC,MAAM;IACjC,IAAIe,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,SAAW,EAAEA,CAAC,EAAE;IAC3BL,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,OAAQR,QAAQ,GAAG,CAAC,KAAK,CAAC;EAC9B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMa,MAAM,GAAG,MAAM;IACjBX,QAAQ,GAAG,CAAC,KAAK,CAAC,GACdG,oBAAoB,CAAC,MAAM,CAAC,GAC5BA,oBAAoB,CAAC,KAAK,CAAC;EACnC,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZ,IAAIgB,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,SAAW,EAAEA,CAAC,EAAE;IAC3BC,MAAM,EAAE;IACRN,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACjC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;;EAGd;;EAEA,oBACI;IAAA,wBACI;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eAEjB;MAAQ,OAAO,EAAEI,iBAAkB;MAAA,WAAC,cAAY,EAACN,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eACnE;MAAA,UAAMW,cAAc,GAAG,MAAM,GAAG;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAE5C;MAAQ,OAAO,EAAEF,iBAAkB;MAAA,WAAC,cAAY,EAACP,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eACnE;MAAA,UAAME;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAO,eAE9B;MAAQ,OAAO,EAAEM,KAAM;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEd;;AAEA;;AAEA;AACA;AACA;AAAA,GA7DwBX,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}